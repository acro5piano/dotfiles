snippet ust
  const [${1:name}, set${1/[a-z]/\U\0/}] = useState(${2:defaultValue})
snippet uro
  const router = useRouter()
snippet imr
  import * as R from 'remeda'
snippet rct
  import React from 'react'
snippet imt
  import { t } from 'ttag'
snippet rfn
  import React from 'react'

  type `expand('%:t:r')`Props = {
    children: React.ReactNode
  }

  export const `expand('%:t:r')`: React.FC<`expand('%:t:r')`Props> = ({ ${1} }) => {
    return (
      <div>
      </div>
    )
  }
snippet rho
  type ${1:`expand('%:t:r')`}Props = {

  }

  export const ${1:`expand('%:t:r')`} = ({ ${2} }: ${1:`expand('%:t:r')`}Props) => {
    const [,] = useState()
  }
snippet ufo
  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm({
    defaultValues: {
    },
  });
snippet tst
  import 'src/testing/hooks/refresh-database';

  import test from 'ava'

  test.serial('${1:`substitute(expand('%:t:r'), '.test', '', 'g')`}', async (t) => {
    ${2}
  })
snippet tsti
  import 'integration-tests/hooks/refresh-database'

  import test from 'ava'

  test.serial('${1:`substitute(expand('%:t:r'), '.test', '', 'g')`}', async (t) => {
    ${2}
  })
snippet apm
  <AppModal isOpen={isModalVisible} onRequestClose={() => setIsModalVisible(false)}>
  </AppModal>
snippet imv
  const [isModalVisible, setIsModalVisible] = useState(false)
snippet uef
  useEffect(() => {
    ${0}
  }, [])
snippet utr
  const { t } = useTranslation();
snippet una
  const navigation = useNavigation();
snippet mai
  <span className="material-icons">${1}</span>
snippet ulo
  const [pathname, navigate] = useLocation();
snippet ucs
  type `!lua vim.fn.expand('%:t:r'):gsub("^%l", string.upper)`Args = {

  }

  export async function `expand('%:t:r')`({}: `!lua vim.fn.expand('%:t:r'):gsub("^%l", string.upper)`Args) {

  }


