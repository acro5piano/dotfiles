snippet ust
	const [${1:name}, set${1/.*/\=v:lua.UpperFirstLetter(submatch(0))/}] = useState(${2:defaultValue})
snippet uro
	const router = useRouter()
snippet imr
  import React from 'react'
snippet rfn
	interface ${1:`expand('%:t:r')`}Props {

	}

	export const ${1:`expand('%:t:r')`} = ({ ${2} }: ${1:`expand('%:t:r')`}Props) => {
		return (
			<div>
			</div>
		)
	}
snippet rfc
	interface ${1:`expand('%:t:r')`}Props {

	}

	export const ${1:`expand('%:t:r')`}: React.FC<${1:`expand('%:t:r')`}Props> = ({ ${2} }) => {
		return (
			<div>
			</div>
		)
	}
snippet ufo
  const {
    register,
    handleSubmit,
    formState: { errors, isSubmitting },
  } = useForm({
    defaultValues: {
    },
  });
snippet tst
	import 'src/testing/hooks/refresh-database';

	import test from 'ava'

	test.serial('${1:`substitute(expand('%:t:r'), '.test', '', 'g')`}', async (t) => {
		${2}
	})
snippet apm
	<AppModal isOpen={isModalVisible} onRequestClose={() => setIsModalVisible(false)}>
	</AppModal>
snippet imv
	const [isModalVisible, setIsModalVisible] = useState(false)
snippet uef
  useEffect(() => {
    ${0}
  }, [])
snippet utr
  const { t } = useTranslation();
snippet una
  const navigation = useNavigation();
snippet ;if
  if (${1}) {
    ${2}
  }
